@misc{nvidia_volta,
	title = {Inside {Volta}: {The} {World}’s {Most} {Advanced} {Data} {Center} {GPU}},
	shorttitle = {Inside {Volta}},
	url = {https://developer.nvidia.com/blog/inside-volta/},
	abstract = {Today at the 2017 GPU Technology Conference in San Jose, NVIDIA CEO Jen-Hsun Huang announced the new NVIDIA Tesla V100, the most advanced accelerator ever built. From recognizing speech to training…},
	language = {en-US},
	urldate = {2023-09-28},
	journal = {NVIDIA Technical Blog},
	month = may,
	year = {2017},
	file = {Snapshot:/home/tom/Zotero/storage/93JS6PTZ/inside-volta.html:text/html},
}

@inproceedings{10.1145/2492045.2492060,
author = {Laine, Samuli and Karras, Tero and Aila, Timo},
title = {Megakernels Considered Harmful: Wavefront Path Tracing on GPUs},
year = {2013},
isbn = {9781450321358},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2492045.2492060},
doi = {10.1145/2492045.2492060},
abstract = {When programming for GPUs, simply porting a large CPU program into an equally large GPU kernel is generally not a good approach. Due to SIMT execution model on GPUs, divergence in control flow carries substantial performance penalties, as does high register us-age that lessens the latency-hiding capability that is essential for the high-latency, high-bandwidth memory system of a GPU. In this paper, we implement a path tracer on a GPU using a wavefront formulation, avoiding these pitfalls that can be especially prominent when using materials that are expensive to evaluate. We compare our performance against the traditional megakernel approach, and demonstrate that the wavefront formulation is much better suited for real-world use cases where multiple complex materials are present in the scene.},
booktitle = {Proceedings of the 5th High-Performance Graphics Conference},
pages = {137–143},
numpages = {7},
keywords = {complex materials, path tracing, GPU},
location = {Anaheim, California},
series = {HPG '13}
}

@article{van_antwerpen_unbiased_2011,
	title = {Unbiased physically based rendering on the {GPU}},
	url = {https://repository.tudelft.nl/islandora/object/uuid%3A4a5be464-dc52-4bd0-9ede-faefdaff8be6},
	abstract = {Since the introduction of General-Purpose GPU computing, significant increase has been made in performance for regular path tracing. However, more advanced versions of path tracing such as BiDirectional Path Tracing (BDPT) and Energy Redistribution Path Tracing (ERPT) have not been implemented successfully so far due to their stochastic sampling characteristics. The goal of this thesis is to find efficient GPU implementations for these unbiased physically based rendering methods. In this thesis improved streaming versions of these algorithms have been developed that better exploit ray coherence, reduce memory-footprint, and improve convergence, in order to make the algorithms more feasible for the GPU. The performance of the GPU versions is compared with the CPU versions and it is shown that the convergence characteristics of the original methods are preserved in our GPU implementations, while the processing has been speeded up with an order of magnitude.},
	language = {en},
	urldate = {2023-09-29},
	author = {Van Antwerpen, D. G.},
	year = {2011},
	file = {Full Text PDF:/home/tom/Zotero/storage/4EHFRPVG/Van Antwerpen - 2011 - Unbiased physically based rendering on the GPU.pdf:application/pdf},
}

@misc{cuda_programming_guide,
	title = {1. {Introduction} — {CUDA} {C} {Programming} {Guide}},
	url = {https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#unified-memory-introduction},
	urldate = {2023-09-29},
}

